//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamAccountSwitcher.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SteamAccountSwitcher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SteamAccountSwitcher.
        /// </summary>
        public static string AppPathName {
            get {
                return ResourceManager.GetString("AppPathName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright (c) 2012 Simon Cropp and contributors
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///
        ///The above  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Costura_Fody_License {
            get {
                return ResourceManager.GetString("Costura_Fody_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Public License
        ///
        ///This license governs use of the accompanying software. If you use the software, you accept this license. If you do not accept the license, do not use the software.
        ///
        ///1. Definitions
        ///
        ///The terms &quot;reproduce,&quot; &quot;reproduction,&quot; &quot;derivative works,&quot; and &quot;distribution&quot; have the same meaning here as under U.S. copyright law.
        ///
        ///A &quot;contribution&quot; is the original software, or any additions or changes to the software.
        ///
        ///A &quot;contributor&quot; is any person that distributes its contribution under t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Extended_WPF_Toolkit_License {
            get {
                return ResourceManager.GetString("Extended_WPF_Toolkit_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright (c) 2020 havendv
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above copyright notice [rest of string was truncated]&quot;;.
        /// </summary>
        public static string H_NotifyIcon_License {
            get {
                return ResourceManager.GetString("H_NotifyIcon_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright (c) 2016 MahApps
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///
        ///The above copyright notice and  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MahApps_Metro_IconPacks_License {
            get {
                return ResourceManager.GetString("MahApps_Metro_IconPacks_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright (c) 2015 Daniel Chalmers
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///
        ///The above copyright not [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Steam_Account_Switcher_License {
            get {
                return ResourceManager.GetString("Steam_Account_Switcher_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Login.
        /// </summary>
        public static string SteamNotLoggedInTitle {
            get {
                return ResourceManager.GetString("SteamNotLoggedInTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Software\Valve\Steam.
        /// </summary>
        public static string SteamRegistryDirectoryPath {
            get {
                return ResourceManager.GetString("SteamRegistryDirectoryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) 2016 Shravan Rajinikanth
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Vdf_NET_License {
            get {
                return ResourceManager.GetString("Vdf_NET_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright (c) 2017 Daniel Chalmers
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///
        ///The above copyright not [rest of string was truncated]&quot;;.
        /// </summary>
        public static string WpfAboutView_License {
            get {
                return ResourceManager.GetString("WpfAboutView_License", resourceCulture);
            }
        }
    }
}
